<?php

namespace Proxies\__CG__\Deliverme\MenuBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class DeliveryMan extends \Deliverme\MenuBundle\Entity\DeliveryMan implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Deliverme\\MenuBundle\\Entity\\DeliveryMan' . "\0" . 'id', '' . "\0" . 'Deliverme\\MenuBundle\\Entity\\DeliveryMan' . "\0" . 'firstName', '' . "\0" . 'Deliverme\\MenuBundle\\Entity\\DeliveryMan' . "\0" . 'lastName', '' . "\0" . 'Deliverme\\MenuBundle\\Entity\\DeliveryMan' . "\0" . 'birthDate', '' . "\0" . 'Deliverme\\MenuBundle\\Entity\\DeliveryMan' . "\0" . 'phoneNumber', '' . "\0" . 'Deliverme\\MenuBundle\\Entity\\DeliveryMan' . "\0" . 'photo', '' . "\0" . 'Deliverme\\MenuBundle\\Entity\\DeliveryMan' . "\0" . 'typeOfStay', '' . "\0" . 'Deliverme\\MenuBundle\\Entity\\DeliveryMan' . "\0" . 'permitsOfStay', '' . "\0" . 'Deliverme\\MenuBundle\\Entity\\DeliveryMan' . "\0" . 'driversLicenseNumber', '' . "\0" . 'Deliverme\\MenuBundle\\Entity\\DeliveryMan' . "\0" . 'copyOfDrivingLicense', '' . "\0" . 'Deliverme\\MenuBundle\\Entity\\DeliveryMan' . "\0" . 'data_created', '' . "\0" . 'Deliverme\\MenuBundle\\Entity\\DeliveryMan' . "\0" . 'data_updated', 'file', 'tmp'];
        }

        return ['__isInitialized__', '' . "\0" . 'Deliverme\\MenuBundle\\Entity\\DeliveryMan' . "\0" . 'id', '' . "\0" . 'Deliverme\\MenuBundle\\Entity\\DeliveryMan' . "\0" . 'firstName', '' . "\0" . 'Deliverme\\MenuBundle\\Entity\\DeliveryMan' . "\0" . 'lastName', '' . "\0" . 'Deliverme\\MenuBundle\\Entity\\DeliveryMan' . "\0" . 'birthDate', '' . "\0" . 'Deliverme\\MenuBundle\\Entity\\DeliveryMan' . "\0" . 'phoneNumber', '' . "\0" . 'Deliverme\\MenuBundle\\Entity\\DeliveryMan' . "\0" . 'photo', '' . "\0" . 'Deliverme\\MenuBundle\\Entity\\DeliveryMan' . "\0" . 'typeOfStay', '' . "\0" . 'Deliverme\\MenuBundle\\Entity\\DeliveryMan' . "\0" . 'permitsOfStay', '' . "\0" . 'Deliverme\\MenuBundle\\Entity\\DeliveryMan' . "\0" . 'driversLicenseNumber', '' . "\0" . 'Deliverme\\MenuBundle\\Entity\\DeliveryMan' . "\0" . 'copyOfDrivingLicense', '' . "\0" . 'Deliverme\\MenuBundle\\Entity\\DeliveryMan' . "\0" . 'data_created', '' . "\0" . 'Deliverme\\MenuBundle\\Entity\\DeliveryMan' . "\0" . 'data_updated', 'file', 'tmp'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (DeliveryMan $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setFirstName($firstName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFirstName', [$firstName]);

        return parent::setFirstName($firstName);
    }

    /**
     * {@inheritDoc}
     */
    public function getFirstName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFirstName', []);

        return parent::getFirstName();
    }

    /**
     * {@inheritDoc}
     */
    public function setLastName($lastName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastName', [$lastName]);

        return parent::setLastName($lastName);
    }

    /**
     * {@inheritDoc}
     */
    public function getLastName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastName', []);

        return parent::getLastName();
    }

    /**
     * {@inheritDoc}
     */
    public function setBirthDate($birthDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBirthDate', [$birthDate]);

        return parent::setBirthDate($birthDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getBirthDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBirthDate', []);

        return parent::getBirthDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setPhoneNumber($phoneNumber)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPhoneNumber', [$phoneNumber]);

        return parent::setPhoneNumber($phoneNumber);
    }

    /**
     * {@inheritDoc}
     */
    public function getPhoneNumber()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPhoneNumber', []);

        return parent::getPhoneNumber();
    }

    /**
     * {@inheritDoc}
     */
    public function setPhoto($photo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPhoto', [$photo]);

        return parent::setPhoto($photo);
    }

    /**
     * {@inheritDoc}
     */
    public function updateDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'updateDate', []);

        return parent::updateDate();
    }

    /**
     * {@inheritDoc}
     */
    public function createDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'createDate', []);

        return parent::createDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setTypeOfStay($typeOfStay)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTypeOfStay', [$typeOfStay]);

        return parent::setTypeOfStay($typeOfStay);
    }

    /**
     * {@inheritDoc}
     */
    public function getTypeOfStay()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTypeOfStay', []);

        return parent::getTypeOfStay();
    }

    /**
     * {@inheritDoc}
     */
    public function setPermitsOfStay($permitsOfStay)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPermitsOfStay', [$permitsOfStay]);

        return parent::setPermitsOfStay($permitsOfStay);
    }

    /**
     * {@inheritDoc}
     */
    public function getPermitsOfStay()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPermitsOfStay', []);

        return parent::getPermitsOfStay();
    }

    /**
     * {@inheritDoc}
     */
    public function setDriversLicenseNumber($driversLicenseNumber)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDriversLicenseNumber', [$driversLicenseNumber]);

        return parent::setDriversLicenseNumber($driversLicenseNumber);
    }

    /**
     * {@inheritDoc}
     */
    public function getDriversLicenseNumber()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDriversLicenseNumber', []);

        return parent::getDriversLicenseNumber();
    }

    /**
     * {@inheritDoc}
     */
    public function setCopyOfDrivingLicense($copyOfDrivingLicense)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCopyOfDrivingLicense', [$copyOfDrivingLicense]);

        return parent::setCopyOfDrivingLicense($copyOfDrivingLicense);
    }

    /**
     * {@inheritDoc}
     */
    public function getCopyOfDrivingLicense()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCopyOfDrivingLicense', []);

        return parent::getCopyOfDrivingLicense();
    }

    /**
     * {@inheritDoc}
     */
    public function setDataCreated($dataCreated)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDataCreated', [$dataCreated]);

        return parent::setDataCreated($dataCreated);
    }

    /**
     * {@inheritDoc}
     */
    public function getDataCreated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDataCreated', []);

        return parent::getDataCreated();
    }

    /**
     * {@inheritDoc}
     */
    public function setDataUpdated($dataUpdated)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDataUpdated', [$dataUpdated]);

        return parent::setDataUpdated($dataUpdated);
    }

    /**
     * {@inheritDoc}
     */
    public function getDataUpdated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDataUpdated', []);

        return parent::getDataUpdated();
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function getPhoto()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPhoto', []);

        return parent::getPhoto();
    }

    /**
     * {@inheritDoc}
     */
    public function getAbsulatePath()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAbsulatePath', []);

        return parent::getAbsulatePath();
    }

    /**
     * {@inheritDoc}
     */
    public function getWebPath()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWebPath', []);

        return parent::getWebPath();
    }

    /**
     * {@inheritDoc}
     */
    public function getFile()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFile', []);

        return parent::getFile();
    }

    /**
     * {@inheritDoc}
     */
    public function preUpload()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'preUpload', []);

        return parent::preUpload();
    }

    /**
     * {@inheritDoc}
     */
    public function upload()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'upload', []);

        return parent::upload();
    }

    /**
     * {@inheritDoc}
     */
    public function storeFilenameForRemove()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'storeFilenameForRemove', []);

        return parent::storeFilenameForRemove();
    }

    /**
     * {@inheritDoc}
     */
    public function removeUpload()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeUpload', []);

        return parent::removeUpload();
    }

    /**
     * {@inheritDoc}
     */
    public function getTmp()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTmp', []);

        return parent::getTmp();
    }

    /**
     * {@inheritDoc}
     */
    public function setFile(\Symfony\Component\HttpFoundation\File\UploadedFile $file = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFile', [$file]);

        return parent::setFile($file);
    }

    /**
     * {@inheritDoc}
     */
    public function setTmp($tmp)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTmp', [$tmp]);

        return parent::setTmp($tmp);
    }

}
